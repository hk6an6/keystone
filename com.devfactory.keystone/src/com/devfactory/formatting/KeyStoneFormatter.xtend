/*
 * generated by Xtext
 */
package com.devfactory.formatting

import org.eclipse.xtext.formatting.impl.AbstractDeclarativeFormatter
import org.eclipse.xtext.formatting.impl.FormattingConfig
import com.google.inject.Inject;
import com.devfactory.services.KeyStoneGrammarAccess

/**
 * This class contains custom formatting description.
 * 
 * see : http://www.eclipse.org/Xtext/documentation.html#formatting
 * on how and when to use it 
 * 
 * Also see {@link org.eclipse.xtext.xtext.XtextFormattingTokenSerializer} as an example
 */
public class KeyStoneFormatter extends AbstractDeclarativeFormatter {

	@Inject extension KeyStoneGrammarAccess
	
	override configureFormatting(FormattingConfig c) {
		c.setIndentation(getStepAccess.tellKeyword_1, getStepAccess.endKeyword_4)
		c.setIndentation(getRootStepAccess.tellKeyword_2, getRootStepAccess.endKeyword_5)
		c.setLinewrap(1,1,2).after(getStepRule)
		c.setLinewrap(1,1,2).after(getRootStepRule)
// It's usually a good idea to activate the following three statements.
// They will add and preserve newlines around comments
		c.setLinewrap(0, 1, 2).before(SL_COMMENTRule)
		
	}
}
